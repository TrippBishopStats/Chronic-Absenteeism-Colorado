---
title: "Chronic Absenteeism in Colorado School Districts"
subtitle: "School years 2016-2017 to 2022-2023"
author: "Tripp Bishop"
format: html
---

```{r setup}
#| message: false
#| echo: false
library(tidyverse)
library(janitor)
library(readxl)
library(naniar)
rm(list=ls())
# run all the preprocessing code.
source("scripts/data-prep.R")
standard_chart_colour <- "#001970"
theme_set(theme_minimal())
```

## Overview

Add basic introductory text here such as stating the problem and introducing definitions. List the objectives of
the analysis.

### Definitions

* **Truancy**: Truancy is defined as an unexcused absence. The rate is calculated by dividing the reported Total Student Days Unexcused Absences by the Total Student Days Possible.
* **Habitually Truant (Student Count)**: A student is counted as habitually truant if the student has 4 excused absences in one month and/or 10 unexcused absences in one school year.
* **Chronically Absent**: A student absent 10 percent or more of the days enrolled during the school year is chronically absent. All absences are included - unexcused and excused. The rate is the percentage of students enrolled who are chronically absent.

### Objectives

* Understand how rates of chronic absenteeism change temporally and spatial from 2016 to 2023.
* Compare chronic absenteeism rates in different regions of Colorado
* Understand if COVID-19 appears to have had a significant effect on chronic absentee rates.
* Understand if school district size is correlated with chronic absentee rates.


## Data Sources

Make general statements about the data sources and state assumptions about quality of the data.

Absenteeism Data: [Colorado Department of Education](https://www.cde.state.co.us/cdereval/truancystatistics)

School District Shape Files: [Colorado Geospatial Portal](https://geodata.colorado.gov/datasets/COOIT::school-districts/about)



## Data prepartion

### Standarising file names, fields, and naming conventions



### The shape file

School districts to repair --
FREMONT RE-2 - Florence RE-2 School District
CUSTER COUNTY SCHOOL DISTRICT C-1 - Consolidated C-1 School District (Westcliffe)
JULESBURG RE-1 - Platte Valley RE-7 School District

## Data processing

### Understanding missingness



#### 2016-2017 school year

```{r check for missingness 2016}
naniar::miss_case_summary(df_2016) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2016 |> 
  rowid_to_column("case"), by=c("case"))
```

#### 2017-2018 school year

```{r check for missingness 2017}
naniar::miss_case_summary(df_2017) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2017 |> 
  rowid_to_column("case"), by=c("case"))
```

#### 2018-2019 school year

```{r check for missingness 2018}
naniar::miss_case_summary(df_2018) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2018 |> 
  rowid_to_column("case"), by=c("case"))
```

#### 2019-2020 school year

```{r check for missingness 2019}
naniar::miss_case_summary(df_2019) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2019 |> 
  rowid_to_column("case"), by=c("case"))
```

#### 2020-2021 school year

```{r check for missingness 2020}
naniar::miss_case_summary(df_2020) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2020 |> 
  rowid_to_column("case"), by=c("case"))
```

#### 2021-2022 school year

```{r check for missingness 2021}
naniar::miss_case_summary(df_2021) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2021 |> 
  rowid_to_column("case"), by=c("case"))
```


#### 2022-2023 school year

```{r check for missingness 2022}
naniar::miss_case_summary(df_2022) |> 
  filter(n_miss > 0) |> 
  inner_join(df_2022 |> 
  rowid_to_column("case"), by=c("case"))
```

### Merging the datasets

```{r}
df_master <- bind_rows(df_2016,
                       df_2017,
                       df_2018,
                       df_2019,
                       df_2020,
                       df_2021,
                       df_2022)
```




### Examination of unvariates

There are 3 numeric fields that need to be reviewed: `chronically_absent_rate`,
`absentee_students`, and `total_students`. All of these fields should have 
positive values. The first, `chronically_absent_rate` should range between 0 and
1. In addition to these numeric fields, the school_districts need to be examined
to ensure that all datasets include the same 178 school districts. Additionally,
each dataset should contain 178 observations for the same school year.

#### Verify counties

```{r}
df_master |> 
  distinct(county_name)
```
There are 63 counties present. THis is good. There are 64 counties in the state, 
but Broomfield county is missing because it does not have any school districts 
of its own. It is served by existing districts.

The names are in call caps, for aesthetics, these will be converted to proper
case.

```{r verify distinct counties}
df_master <- df_master |> 
  mutate(
    county_name = str_to_title(county_name)
  )

df_master |> 
  distinct(county_name)
```



#### Verify school districts

Each dataset has 178 school district records. They should all be unique and 
identical between school years.

```{r distinct district count}
district_count <- df_master |>
  distinct(district_code) |> 
  count() |> 
  pull()

district_count
```
This confirms that there are only `r district_count` districts in the dataset.

```{r}
district_name_count <- df_master |>
  distinct(district_name) |> 
  count() |> 
  pull()

district_name_count
```
We have an issue with the `district_name` field, however. There are `r district_name_count` distinct
values rather `r district_count`. We need to investigate the field to see if it
is possible to normalise the `district_name` field.

```{r}
df_master |>
  distinct(district_name)
```
After pouring through the data, it looks like the districts have both an all
caps version and a proper case version. 




```{r verify distinct school districts}

distinct_districts <- df_master |> 
  mutate(
    district_name = str_to_title(district_name)
  ) |> 
  distinct(district_name) |> 
  count() |> 
  pull()
distinct_districts
```
This gets us a lot closer. There are now only `r distinct_districts` distinct
`district_name` values, but we still have `r distinct_districts - district_count`
to normalise.

Since we know that there are only `r district_count` distinct `district_code` 
values, we can group by the `district_code` and find all instances where the
`count()` is greater than 1. There should be `r distinct_districts - district_count`
such instances.

```{r}
df_master |> 
  mutate(
    district_name = str_to_title(district_name)
  ) |> 
  distinct(district_name, district_code) |>
  group_by(district_code) |> 
  count() |> 
  filter(n > 1)
```
These are the `r distinct_districts - district_count` districts. We can retrieve
them to see what we need to do to normalise them. Before we do, we will make
permanent the proper casing of the district names.

```{r}
df_master <- df_master |> 
  mutate(
    district_name = str_to_title(district_name)
  )

dupe_district_ids <- df_master |> 
  mutate(
    district_name = str_to_title(district_name)
  ) |> 
  distinct(district_name, district_code) |>
  group_by(district_code) |> 
  count() |> 
  filter(n > 1) |> 
  select(district_code) |> 
  pull()

df_master |> 
  filter(district_code %in% dupe_district_ids) |> 
  select(district_code, district_name) |> 
  distinct() |> 
  arrange(district_code)
```
Most of these issues are minor differences that are easily fixed. The only 
significant differences are with district codes `0920`, `1110`, `2730`, and 
`3100`. These records will need to be modified individually as there are no
patterns to the discrepancies. When the issue is that there are different names
in use, the one being used more recently will be adopted.

```{r normalise district names}

df_master <- df_master |> 
  mutate(
    district_name = case_when(district_name %in% c("Mc Clave Re-2","Mcclave Re-2") ~ "McClave Re-2",
                              str_starts(district_name, "St Vrain Valley Re") ~ "St Vrain Valley Re-1j",
                              # district 0920 is called "Elizabeth School District" most recently
                              district_name == "Elizabeth C-1" ~ "Elizabeth School District",
                              # district 1110 is called "District 49" most recently
                              district_name == "Falcon 49" ~ "District 49",
                              str_starts(district_name, "Moffat County") ~ "Moffat County Re-1",
                              district_name == "Meeker Re1" ~ "Meeker Re-1",
                              # district 2730 is called "Upper Rio Grande School District C-7" most recently
                              district_name == "Del Norte C-7" ~ "Upper Rio Grande School District C-7",
                              district_name == "Windsor Re-4" ~ "Weld Re-4",
                              # district 3140 is called "Weld Re-8 Schools" most recently
                              district_name == "Weld County S/D Re-8" ~ "Weld Re-8 Schools",
                              TRUE ~ district_name)
  )
```

This confirms that the `district_name` field has been normalised. Now there are
only `r district_count` distinct values.

```{r confirm district name normalisation}
df_master |>
  distinct(district_name) |> 
  count()
```



#### Verify school year information

Each dataset should have a single value in the `school_year` field. If this is
not the case, determine what the discrepancy is and make the correction.

```{r}

df_master |> 
  group_by(school_year) |> 
  count()
```

The datasets all contain a single value for the `school_year`.

#### 2016-2017 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r}
generate_absentee_rate(df_2016)
```
The data range is valid, but the distribution is suspect. A significant number
of the districts report 0 chronically absent students in 2016-2017. This seems
unlikely. Is 0 being used to indicate "no data" or do these districts actually 
have no students that are chronically absent? This question does not appear to
be answered on the [Colorado Department of Education website](https://www.cde.state.co.us/dropoutprevention/attendance).


```{r}
summary(df_2016$total_students)
```

```{r 2016 total student distribution}
#| message: false
generate_total_enrollment(df_2016)
```

```{r}
summary(df_2016$absentee_students)
```


```{r}
generate_absentee_enrollment(df_2016)
```

#### 2017-2018 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2017 absentee rate}
generate_absentee_rate(df_2017)
```
```{r 2017 total student distribution}
#| message: false
generate_total_enrollment(df_2017)
```



```{r 2017 absentee enrollement}
#| message: false
generate_absentee_enrollment(df_2017)
```

#### 2018-2019 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2018 absentee rate distribution}
generate_absentee_rate(df_2018)
```



```{r 2018 total student distribution}
#| message: false
generate_total_enrollment(df_2018)
```



```{r 2018 absentee enrollement distribution}
#| message: false
generate_absentee_enrollment(df_2018)
```



#### 2019-2020 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2019 absentee rate distribution}
generate_absentee_rate(df_2019)
```



```{r 2019 total student distribution}
#| message: false
generate_total_enrollment(df_2019)
```



```{r 2019 absentee enrollement distribution}
#| message: false
generate_absentee_enrollment(df_2019)
```


#### 2020-2021 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2020 absentee rate distribution}
generate_absentee_rate(df_2020)
```



```{r 2020 total student distribution}
#| message: false
generate_total_enrollment(df_2020)
```



```{r 2020 absentee enrollement distribution}
#| message: false
generate_absentee_enrollment(df_2020)
```


#### 2021-2022 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2021 absentee rate distribution}
generate_absentee_rate(df_2021)
```



```{r 2021 total student distribution}
#| message: false
generate_total_enrollment(df_2021)
```



```{r 2021 absentee enrollement distribution}
#| message: false
generate_absentee_enrollment(df_2021)
```



#### 2022-2023 school year data

First, confirm that `chronically_absent_rate` contains valid values and their
distribution with a histogram.

```{r 2022 absentee rate distribution}
generate_absentee_rate(df_2022)
```



```{r 2022 total student distribution}
#| message: false
generate_total_enrollment(df_2022)
```



```{r 2022 absentee enrollement distribution}
#| message: false
generate_absentee_enrollment(df_2022)
```


## Analysis


## Key findings




